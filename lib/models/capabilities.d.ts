/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run json-schema-to-typescript to regenerate this file.
*/

export type ConnectionStatus = ("online" | "readonly" | "offline");

export interface Capabilities {
  area: {
      /**
     * The maximum area in square degrees that can be queried by API calls.
     */
  maximum: number;
  };
  changesets: {
      /**
     * The maximum number of combined nodes, ways and relations that can be contained in a changeset.
     */
  maximumElements: number;
  };
  noteArea: {
    maximum: number;
  };
  /**
   * The status element returns either online, readonly or offline for each of the database, API and GPX API.
   * The database field is informational, and the API/GPX-API fields indicate whether a client should expect read and write requests to work (online), only read requests to work (readonly) or no requests to work (offline).
   */
  status: {
    api: ConnectionStatus;
    database: ConnectionStatus;
    gpx: ConnectionStatus;
  };
  timeout: {
    seconds: number;
  };
  tracepoints: {
      /**
     * The maximum number of points in a single GPS trace. (Possibly incorrect)
     */
  perPage: number;
  };
  /**
   * The API call versions that the server will accept.
   */
  version: {
    maximum: string;
    minimum: string;
  };
  waynodes: {
      /**
     * The maximum number of nodes that a way may contain.
     */
  maximum: number;
  };
}
